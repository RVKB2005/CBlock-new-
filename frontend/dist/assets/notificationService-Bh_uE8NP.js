import{c as n,a as f}from"./index-CuX443dt.js";class d{constructor(){this.notificationQueue=[],this.isProcessing=!1,this.permissionRequested=!1,this.initializeNotifications()}async initializeNotifications(){try{"Notification"in window&&!this.permissionRequested&&(this.permissionRequested=!0,Notification.permission==="default"&&console.log("üì¢ Browser notifications available, permission can be requested")),"serviceWorker"in navigator&&console.log("üîß Service worker support available for background notifications")}catch(i){console.error("Failed to initialize notifications:",i)}}async requestNotificationPermission(){try{if(!("Notification"in window))return console.warn("Browser does not support notifications"),!1;if(Notification.permission==="granted")return!0;if(Notification.permission==="denied")return console.warn("Notification permission denied by user"),!1;if(!window.confirm("Would you like to receive notifications when you earn carbon credits? This helps you stay updated on your document verification progress."))return!1;const t=await Notification.requestPermission()==="granted";return t?n.success("üîî Notifications enabled! You'll be notified when you receive credits.",{duration:5e3}):n.info("You can enable notifications later in your browser settings.",{duration:4e3}),t}catch(i){return console.error("Failed to request notification permission:",i),!1}}async showCreditAllocationNotification(i,e={}){try{const{showToast:t=!0,showBrowserNotification:o=!0,priority:a="normal"}=e;console.log("üì¢ Showing credit allocation notification:",{allocationId:i.id,amount:i.amount,recipient:i.recipientAddress});const s=f.getCurrentUser(),r=s&&(s.walletAddress===i.recipientAddress||s.email===i.recipientEmail);if(t&&r){const c=`üéâ You received ${this.formatAmount(i.amount)} carbon credits from "${i.documentName}"!`;n.success(c,{duration:8e3,icon:"üí∞",style:{background:"#10B981",color:"white",fontWeight:"500"},position:"top-right"})}if(o&&"Notification"in window&&Notification.permission==="granted"){const c=new Notification("Carbon Credits Allocated! üí∞",{body:`You received ${this.formatAmount(i.amount)} credits from "${i.documentName}"`,icon:"/favicon.ico",badge:"/favicon.ico",tag:`credit-allocation-${i.id}`,requireInteraction:a==="high",silent:a==="low",data:{type:"credit-allocation",allocationId:i.id,amount:i.amount,documentName:i.documentName}});c.onclick=()=>{window.focus(),c.close(),window.location.pathname!=="/"&&(window.location.href="/#balance")},setTimeout(()=>{c.close()},1e4)}this.logNotification("credit-allocation",{allocationId:i.id,amount:i.amount,recipient:i.recipientAddress,documentName:i.documentName,timestamp:new Date().toISOString()})}catch(t){console.error("Failed to show credit allocation notification:",t)}}async showDocumentStatusNotification(i,e,t={}){try{const{showToast:o=!0}=t,s={attested:{title:"Document Attested! ‚úÖ",message:`Your document "${i.projectName||i.filename}" has been verified and is ready for minting.`,color:"#10B981"},minted:{title:"Credits Minted! ü™ô",message:`Carbon credits have been minted for your document "${i.projectName||i.filename}".`,color:"#059669"},rejected:{title:"Document Rejected ‚ùå",message:`Your document "${i.projectName||i.filename}" was rejected during verification.`,color:"#DC2626"}}[e];if(!s)return;if(o&&(e==="rejected"?n.error:n.success)(s.message,{duration:6e3,style:{background:s.color,color:"white"}}),"Notification"in window&&Notification.permission==="granted"){const r=new Notification(s.title,{body:s.message,icon:"/favicon.ico",tag:`document-status-${i.id||i.cid}`,data:{type:"document-status",documentId:i.id||i.cid,status:e}});r.onclick=()=>{window.focus(),r.close()},setTimeout(()=>{r.close()},8e3)}}catch(o){console.error("Failed to show document status notification:",o)}}async showSystemNotification(i,e,t={}){try{const{type:o="info",showToast:a=!0,showBrowserNotification:s=!1,duration:r=5e3}=t;if(a&&({success:n.success,error:n.error,warning:n.error,info:n.success}[o]||n.success)(e,{duration:r}),s&&"Notification"in window&&Notification.permission==="granted"){const c=new Notification(i,{body:e,icon:"/favicon.ico",tag:`system-${Date.now()}`});setTimeout(()=>{c.close()},r)}}catch(o){console.error("Failed to show system notification:",o)}}queueNotification(i,e=0){this.notificationQueue.push({fn:i,delay:e,timestamp:Date.now()}),this.isProcessing||this.processNotificationQueue()}async processNotificationQueue(){if(!(this.isProcessing||this.notificationQueue.length===0)){this.isProcessing=!0;try{for(;this.notificationQueue.length>0;){const i=this.notificationQueue.shift(),e=Date.now()-i.timestamp,t=Math.max(0,i.delay-e);t>0&&await new Promise(o=>setTimeout(o,t));try{await i.fn()}catch(o){console.error("Failed to process queued notification:",o)}}}finally{this.isProcessing=!1}}}logNotification(i,e){try{const t={type:i,data:e,timestamp:new Date().toISOString(),userAgent:navigator.userAgent,url:window.location.href},o=JSON.parse(localStorage.getItem("cblock_notification_logs")||"[]");o.push(t),o.length>100&&o.splice(0,o.length-100),localStorage.setItem("cblock_notification_logs",JSON.stringify(o)),console.log("üìù Notification logged:",t)}catch(t){console.error("Failed to log notification:",t)}}getNotificationLogs(){try{return JSON.parse(localStorage.getItem("cblock_notification_logs")||"[]")}catch(i){return console.error("Failed to get notification logs:",i),[]}}clearNotificationLogs(){localStorage.removeItem("cblock_notification_logs"),console.log("üóëÔ∏è Notification logs cleared")}formatAmount(i){return i?new Intl.NumberFormat("en-US").format(i):"0"}getNotificationStatus(){return{supported:"Notification"in window,permission:"Notification"in window?Notification.permission:"unsupported",enabled:"Notification"in window&&Notification.permission==="granted",serviceWorkerSupported:"serviceWorker"in navigator}}async testNotifications(){try{if(console.log("üß™ Testing notification system..."),n.success("üß™ Test notification - Toast working!",{duration:3e3}),"Notification"in window&&Notification.permission==="granted"){const i=new Notification("üß™ Test Notification",{body:"Browser notifications are working correctly!",icon:"/favicon.ico",tag:"test-notification"});setTimeout(()=>{i.close()},3e3)}else"Notification"in window&&Notification.permission==="default"&&await this.requestNotificationPermission()&&setTimeout(()=>this.testNotifications(),1e3);console.log("‚úÖ Notification test completed")}catch(i){console.error("‚ùå Notification test failed:",i),n.error("Notification test failed: "+i.message)}}}const m=new d;export{m as default};
//# sourceMappingURL=notificationService-Bh_uE8NP.js.map
